#!/bin/sh

# check args count
if [ $# -ne 1 ]; then
  echo "Usage : $0 <kickstart file>"
  exit
fi

# check require packages
reqpkgs="lorax-lmc-novirt patch"
ninstpkgs=""
cnt=0

for pkg in ${reqpkgs}
do
  rpm -q ${pkg} > /dev/null
  if [ $? -ne 0 ]; then
    ninstpkgs="${ninstpkgs}${pkg} "
    cnt=`expr ${cnt} "+" 1`
  fi
done

if [ ${cnt} -ne 0 ]; then
  echo "require packages: ${ninstpkgs}"
  exit
fi

#
# Check modules
#
pymoduleroot="/usr/lib64/python3.6/site-packages/pyanaconda/modules/storage"
if [ ! -d ${pymoduleroot} ]; then
    echo "${pymoduleroot} is no exists."
    exit
fi

pymodulebootloader="${pymoduleroot}/bootloader"
if [ ! -d ${pymodulebootloader} ]; then
    echo "${pymodulebootloader} is no exists."
    exit
fi

if [ ! -f ${pymoduleroot}/platform.py.orig ]; then
  patch -u -b ${pymoduleroot}/platform.py < env/platform.py.patch
fi

if [ ! -f ${pymodulebootloader}/factory.py.orig ]; then
  patch -u -b ${pymoduleroot}/bootloader/factory.py < env/factory.py.patch
fi

if [ ! -f ${pymodulebootloader}/rpi4.py ]; then
  cp -a env/rpi4.py ${pymodulebootloader}
fi

#
# check kickstart files
#
kickstart=${1}
if [ ! -f ${kickstart} ]; then
  echo "${kickstart} is not exist."
  exit
fi

logfile=${0}-`date +%Y%m%d%H%M%S`.log
temp=tmp
release=release
imgfile=sysimage.raw.img

mountpt=mnt
logdir=logs
sysimage=${mountpt}/sysimage
bootfs=${mountpt}/bootfs
bootraw=${mountpt}/bootraw

if [ ! -d ${mountpt} ]; then
  mkdir -p ${sysimage} ${bootfs} ${bootraw}
fi

if [ ! -d ${temp} ]; then
  mkdir -p ${temp}
fi

if [ ! -d {logdir} ]; then
  mkdir -p ${logdir}
fi

if [ -d ${release} ]; then
  rm -rf ${release}
fi

livemedia-creator \
--ks ${kickstart} \
--no-virt \
--image-only \
--keep-image \
--make-disk \
--logfile=${logdir}/${logfile} \
--tmp=${temp} --resultdir ${release} \
--image-name=${imgfile}

ret=$?
if [ ${ret} -ne 0 ]; then
  echo "livemedia-creator is failed"
  exit
fi

if [ -f ${release}/${imgfile} ]; then
  finimgfile=CentOS-8.3.2011-aarch64-RPi4-Minimal-`date +%Y%m%d%H%M%S`.raw.img
  mv ${release}/${imgfile} ${release}/${finimgfile}
fi

